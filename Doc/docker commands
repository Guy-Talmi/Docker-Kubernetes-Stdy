files.exclude

docker
docker build .
docker images
docker run -p 3000:3000 -d e09ade2c62e8
docker run -p 3000:3000 94d9c989eb40
docker ps
docker ps -a
docker stop 303b686cc710

docker run node
docker run -it node
docker run -p 3000:80 -d 37e6dcd8f88a

docker build -t feedback-node .

docker run -p 3000:80 -d --name feedback-app --rm feedback-node

docker stop feedback-app

docker run -p 3000:80 -d --name feedback-app feedback-node

docker start feedback-app

docker rmi feedback-node

docker image prune

docker build -t feedback-node:voluems .

docker build -t feedback-node:dev --build-arg DEFAULT_PORT=8000 .

docker run -p 3000:80 -d --rm --name feedback-app feedback-node:voluems

docker logs feedback-app

docker volume ls

docker rm 8bf66af0088d

docker rmi feedback-node

docker run -p 3000:80 -d --rm --name feedback-app -v feedback:/app/feedback feedback-node:voluems

docker run -p 3000:80 -d --rm --name feedback-app -v feedback:/app/feedback -v "C:/Repos/Docker-Kubernetes-Study/Docker-Kubernetes-Study/data-volumes-01-starting-setup:/app" -v /app/node_modules feedback-node:env

docker run -p 3000:8000 --env PORT=8000 -d --rm --name feedback-app -v feedback:/app/feedback -v "C:/Repos/Docker-Kubernetes-Study/Docker-Kubernetes-Study/data-volumes-01-starting-setup:/app" -v /app/node_modules feedback-node:env

docker run -p 3000:8000 --env-file ./.env -d --rm --name feedback-app -v feedback:/app/feedback -v "C:/Repos/Docker-Kubernetes-Study/Docker-Kubernetes-Study/data-volumes-01-starting-setup:/app" -v /app/node_modules feedback-node:env

docker volume ls

docker volume inspect feedback

docker history 34a3caf60a2c

docker build -t favorites-node .

docker run --name favorites -d --rm -p 3000:3000 favorites-node

docker run --name favorites --rm -p 3000:3000 favorites-node

docker run -d --name mongodb --network favorites-net mongo

docker inspect mongodb

docker container prune

docker network create favorites-net

docker network ls

docker network inspect favorites-net

docker run --name favorites --network favorites-net -d --rm -p 3000:3000 favorites-node

docker run --name mongodb -d --rm -p 27017:27017 mongo

docker image prune -a

docker build -t goals-node .

docker run --name goals-backend --rm -d -p 80:80 goals-node

docker build -t goals-react .

docker run --name goals-frontend --rm -d -p 3000:3000 -it goals-react

docker network ls

docker network create goals-net

docker run --name mongodb -v data:/data/db -d --rm --network goals-net -e MONGO_INITDB_ROOT_USERNAME=max -e MONGO_INITDB_ROOT_PASSWORD=secret mongo

docker run --name mongodb -v data:/data/db -d --rm --network goals-net mongo

docker run --name goals-backend --rm -d -p 80:80 --network goals-net goals-node

docker run --name goals-frontend --rm -d -p 3000:3000 -it goals-react

docker run --name goals-backend -v logs:/app/logs -v C:\Repos\Docker-Kubernetes-Study\Docker-Kubernetes-Study\multi-01-starting-setup\backend:/app -v /app/node_modules --rm -d -p 80:80 --network goals-net goals-node

docker run --name goals-backend -e MONGODB_USERNAME=max -e MONGODB_PASSWORD=secret -v logs:/app/logs -v C:\Repos\Docker-Kubernetes-Study\Docker-Kubernetes-Study\multi-01-starting-setup\backend:/app -v /app/node_modules --rm -d -p 80:80 --network goals-net goals-node

docker logs goals-backend

docker run -v C:/Repos/Docker-Kubernetes-Study/Docker-Kubernetes-Study/multi-01-starting-setup/frontend/src:/app/src --name goals-frontend --rm -d -p 3000:3000 -it goals-react

docker-compose up -d

docker-compose down

docker-compose down -v

docker-compose up --help

docker-compose up -d --build

docker-compose build

docker volume ls

docker run -it -d node

docker exec -it 8f51bb9f75da npm init

docker run -it node npm init

docker run -it -v C:/Repos/Docker_Kubernetes_Study/Docker-Kubernetes-Study/docker-utility:/app node-util npm init

docker run -it -v C:/Repos/Docker_Kubernetes_Study/Docker-Kubernetes-Study/docker-utility:/app node-util npm install

docker run -it -v C:/Repos/Docker_Kubernetes_Study/Docker-Kubernetes-Study/docker-utility:/app mynpm init

docker run -it -v C:/Repos/Docker_Kubernetes_Study/Docker-Kubernetes-Study/docker-utility:/app mynpm install

docker run -it -v C:/Repos/Docker_Kubernetes_Study/Docker-Kubernetes-Study/docker-utility:/app mynpm install express

docker-compose run --rm npm init

docker build -t my-app:1.0 .

docker run -it --rm my-app:1.0

docker ps -a | findstr my-app

docker exec -it 8f51bb9f75da /bin/bash
docker exec -it 8f51bb9f75da /bin/sh
ls
env
ls /home/app
exit

docker run -it -p 80:80 -d httpd
curl http://localhost:80

docker inspect 9d5e0cf8c686

curl http://172.17.0.2

docker build . -t nhttpd

docker run --name s1 -d nhttpd

docker run --name s2 -d nhttpd

docker inspect network bridge

docker exec -it s1 bash

ping google.com

hostname -i

nslookup google.com

docker network create backend --subnet 10.0.0.0/24

docker network connect backend s1

docker network inspect s1

docker network disconnect bridge s1

dockernetwork disconnect bridge s2

docker exec -it s1 bash

nslookup s1

traceroute s1

traceroute s2

docker network ls

docker network create frontend --subnet 10.0.1.0/24

docker network disconnect backend s2

docker network connect frontend s2

docker inspect s2

docker run --name gw --network backend -d nhttpd

docker network connect frontend gw

docker exec -it gw bash

ip route add 10.0.0.0/24 via 10.0.1.3

docker rm s1 s2

docker run --name s1 --network backend --cap-add NET_ADMIN -d nhttpd

docker run --name s2 --network frontend --cap-add NET_ADMIN -d nhttpd

docker exec -it s1 bash
hostname -i
nslookup gw

ip route add 10.0.0.0/24 via 10.0.1.3

traceroute 10.0.0.2

ip route add 10.0.1.0/24 via 10.0.0.3

docker-compose run --rm composer create-project --prefer-dist laravel/laravel .

docker-compose up -d server php mysql

docker-compose up -d --build server

docker-compose down

docker-compose run --rm artisan migrate

docker-compose up -d --build server

